---
# tasks file for tikv

- name: Create deploy directories
  file: path={{ item }} state=directory mode=0755
  with_items:
  - "{{ tikv_log_dir }}"
  - "{{ tikv_data_dir }}"
  - "{{ tikv_conf_dir }}"

- name: Load customized config
  include_vars: file={{ playbook_dir }}/conf/tikv.yml name=tikv_conf_custom

- name: Load default config
  include_vars: file=default.yml name=tikv_conf_default

  #- name: Generate dynamic config
  #  set_fact:
  #    tikv_conf_generated:
  #      metric:
  #        address: >-
  #          {{ hostvars[groups.monitoring_servers[0]].ansible_host | default(hostvars[groups.monitoring_servers[0]].inventory_hostname) ~ ':' ~
  #           (hostvars.get(groups.monitoring_servers.0).pushgateway_port | default('9091')) |
  #           default('') }}
  #      server:
  #        labels: "{{ labels }}"
  #      rocksdb:
  #        wal-dir: "{{ wal_dir }}"
  #      raftstore:
  #        raftdb-path: "{{ raftdb_path }}"
  #      security:
  #        ca-path: >-
  #          {%- if enable_tls|default(false) -%}{{ tikv_cert_dir }}/ca.pem{%- else -%}{%- endif -%}
  #        cert-path: >-
  #          {%- if enable_tls|default(false) -%}{{ tikv_cert_dir }}/tikv-server-{{ tikv_host }}.pem{%- else -%}{%- endif -%}
  #        key-path: >-
  #          {%- if enable_tls|default(false) -%}{{ tikv_cert_dir }}/tikv-server-{{ tikv_host }}-key.pem{%- else -%}{%- endif -%}

- name: Generate final config
  set_fact:
      #tikv_conf: "{{ tikv_conf_custom | with_default_dicts(tikv_conf_generated, tikv_conf_default) }}"
    tikv_conf: "{{ tikv_conf_custom | with_default_dicts(tikv_conf_default) }}"

- debug: var=tikv_conf

- name: Create config file
  template: src=tikv.toml.j2 dest={{ deploy_dir }}/conf/tikv.toml mode=0644 backup=yes
  register: tikv_conf_st

- name: Backup conf file
  command: mv "{{ tikv_conf_st.backup_file }}" "{{ backup_dir }}"
  when: tikv_conf_st.changed and tikv_conf_st.backup_file is defined

- include: "{{ deployment_method }}_deployment.yml"
